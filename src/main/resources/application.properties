# 默认tomcat服务器，配置端口号
server.port=8080
# 配置浏览器访问url项目名，默认为 / ，即http://localhost:8080/admin/login直接访问handler或者静态资源
server.servlet.context-path=/oetl
# DispatcherServlet拦截路径，为了实现restful设为拦截所有路径
server.servlet-path=/

# 文件上传路径
web.upload-path=D:/temp/study13/

## springmvc静态资源访问路径
#spring.mvc.static-path-pattern=/**
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
#  classpath:/static/,classpath:/public/,file:${web.upload-path},classpath:/html/
server.jsp-servlet.init-parameters.development=true

# default is: /, "classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/"
#spring.resources.static-locations=classpath:/res/
# the 'staticLocations' is equal to 'static-locations'
#spring.resources.staticLocations=classpath:/res/

# default is /**
spring.mvc.staticPathPattern=/**



# 视图解析器前后缀
# 能在类中配置的就不要使用配置文件了
#spring.mvc.view.prefix = /WEB-INF/jsp/
#spring.mvc.view.suffix = .jsp

# 文件上传大小限制，maxFileSize单个文件大小，maxRequestSize上传总共大小
spring.http.multipart.maxFileSize=100Mb  
spring.http.multipart.maxRequestSize=100Mb 

# springboot日志级别，可设置DEBUG、ERROR
logging.level.org.springframework=DEBUG

# 数据源
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/oetl?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root
# spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# mybatis的spring-boot-starter预定义的key
mybatis.config-location = classpath:sqlMapConfig.xml
mybatis.type-aliases-package=cn.oetl.dao.mapper, cn.mapper